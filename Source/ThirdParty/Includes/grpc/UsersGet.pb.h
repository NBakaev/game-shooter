// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UsersGet.proto

#ifndef PROTOBUF_UsersGet_2eproto__INCLUDED
#define PROTOBUF_UsersGet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "User.pb.h"
// @@protoc_insertion_point(includes)
class User;
class UserDefaultTypeInternal;
extern UserDefaultTypeInternal _User_default_instance_;
class UserGetRequest;
class UserGetRequestDefaultTypeInternal;
extern UserGetRequestDefaultTypeInternal _UserGetRequest_default_instance_;
class UserGetResponse;
class UserGetResponseDefaultTypeInternal;
extern UserGetResponseDefaultTypeInternal _UserGetResponse_default_instance_;

namespace protobuf_UsersGet_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_UsersGet_2eproto

// ===================================================================

class UserGetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserGetRequest) */ {
 public:
  UserGetRequest();
  virtual ~UserGetRequest();

  UserGetRequest(const UserGetRequest& from);

  inline UserGetRequest& operator=(const UserGetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGetRequest& default_instance();

  static inline const UserGetRequest* internal_default_instance() {
    return reinterpret_cast<const UserGetRequest*>(
               &_UserGetRequest_default_instance_);
  }

  void Swap(UserGetRequest* other);

  // implements Message ----------------------------------------------

  inline UserGetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UserGetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserGetRequest& from);
  void MergeFrom(const UserGetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:UserGetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct  protobuf_UsersGet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserGetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserGetResponse) */ {
 public:
  UserGetResponse();
  virtual ~UserGetResponse();

  UserGetResponse(const UserGetResponse& from);

  inline UserGetResponse& operator=(const UserGetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGetResponse& default_instance();

  static inline const UserGetResponse* internal_default_instance() {
    return reinterpret_cast<const UserGetResponse*>(
               &_UserGetResponse_default_instance_);
  }

  void Swap(UserGetResponse* other);

  // implements Message ----------------------------------------------

  inline UserGetResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  UserGetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserGetResponse& from);
  void MergeFrom(const UserGetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // .User user = 1;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::User& user() const;
  ::User* mutable_user();
  ::User* release_user();
  void set_allocated_user(::User* user);

  // bool valid = 2;
  void clear_valid();
  static const int kValidFieldNumber = 2;
  bool valid() const;
  void set_valid(bool value);

  // @@protoc_insertion_point(class_scope:UserGetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::User* user_;
  bool valid_;
  mutable int _cached_size_;
  friend struct  protobuf_UsersGet_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserGetRequest

// string id = 1;
inline void UserGetRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserGetRequest::id() const {
  // @@protoc_insertion_point(field_get:UserGetRequest.id)
  return id_.GetNoArena();
}
inline void UserGetRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserGetRequest.id)
}
#if LANG_CXX11
inline void UserGetRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserGetRequest.id)
}
#endif
inline void UserGetRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserGetRequest.id)
}
inline void UserGetRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserGetRequest.id)
}
inline ::std::string* UserGetRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:UserGetRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserGetRequest::release_id() {
  // @@protoc_insertion_point(field_release:UserGetRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserGetRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:UserGetRequest.id)
}

// -------------------------------------------------------------------

// UserGetResponse

// .User user = 1;
inline bool UserGetResponse::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
inline void UserGetResponse::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
inline const ::User& UserGetResponse::user() const {
  // @@protoc_insertion_point(field_get:UserGetResponse.user)
  return user_ != NULL ? *user_
                         : *::User::internal_default_instance();
}
inline ::User* UserGetResponse::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::User;
  }
  // @@protoc_insertion_point(field_mutable:UserGetResponse.user)
  return user_;
}
inline ::User* UserGetResponse::release_user() {
  // @@protoc_insertion_point(field_release:UserGetResponse.user)
  
  ::User* temp = user_;
  user_ = NULL;
  return temp;
}
inline void UserGetResponse::set_allocated_user(::User* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:UserGetResponse.user)
}

// bool valid = 2;
inline void UserGetResponse::clear_valid() {
  valid_ = false;
}
inline bool UserGetResponse::valid() const {
  // @@protoc_insertion_point(field_get:UserGetResponse.valid)
  return valid_;
}
inline void UserGetResponse::set_valid(bool value) {
  
  valid_ = value;
  // @@protoc_insertion_point(field_set:UserGetResponse.valid)
}

// string error = 3;
inline void UserGetResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserGetResponse::error() const {
  // @@protoc_insertion_point(field_get:UserGetResponse.error)
  return error_.GetNoArena();
}
inline void UserGetResponse::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserGetResponse.error)
}
#if LANG_CXX11
inline void UserGetResponse::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserGetResponse.error)
}
#endif
inline void UserGetResponse::set_error(const char* value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserGetResponse.error)
}
inline void UserGetResponse::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserGetResponse.error)
}
inline ::std::string* UserGetResponse::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:UserGetResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserGetResponse::release_error() {
  // @@protoc_insertion_point(field_release:UserGetResponse.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserGetResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:UserGetResponse.error)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UsersGet_2eproto__INCLUDED
