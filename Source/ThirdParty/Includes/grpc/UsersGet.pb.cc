// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UsersGet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UsersGet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class UserGetRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserGetRequest> {
} _UserGetRequest_default_instance_;
class UserGetResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserGetResponse> {
} _UserGetResponse_default_instance_;

namespace protobuf_UsersGet_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGetRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGetResponse, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGetResponse, valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGetResponse, error_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(UserGetRequest)},
  { 5, -1, sizeof(UserGetResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserGetResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "UsersGet.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _UserGetRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _UserGetResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_User_2eproto::InitDefaults();
  _UserGetRequest_default_instance_.DefaultConstruct();
  _UserGetResponse_default_instance_.DefaultConstruct();
  _UserGetResponse_default_instance_.get_mutable()->user_ = const_cast< ::User*>(
      ::User::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016UsersGet.proto\032\nUser.proto\"\034\n\016UserGetR"
      "equest\022\n\n\002id\030\001 \001(\t\"D\n\017UserGetResponse\022\023\n"
      "\004user\030\001 \001(\0132\005.User\022\r\n\005valid\030\002 \001(\010\022\r\n\005err"
      "or\030\003 \001(\t2;\n\005Users\0222\n\013GetUserById\022\017.UserG"
      "etRequest\032\020.UserGetResponse\"\000B\031\n\027com.biq"
      "asoft.users.grpcb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 224);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UsersGet.proto", &protobuf_RegisterTypes);
  ::protobuf_User_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_UsersGet_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserGetRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserGetRequest::UserGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_UsersGet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserGetRequest)
}
UserGetRequest::UserGetRequest(const UserGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:UserGetRequest)
}

void UserGetRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UserGetRequest::~UserGetRequest() {
  // @@protoc_insertion_point(destructor:UserGetRequest)
  SharedDtor();
}

void UserGetRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserGetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserGetRequest::descriptor() {
  protobuf_UsersGet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UsersGet_2eproto::file_level_metadata[0].descriptor;
}

const UserGetRequest& UserGetRequest::default_instance() {
  protobuf_UsersGet_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserGetRequest* UserGetRequest::New(::google::protobuf::Arena* arena) const {
  UserGetRequest* n = new UserGetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UserGetRequest)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UserGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserGetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserGetRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserGetRequest)
  return false;
#undef DO_
}

void UserGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserGetRequest)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserGetRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:UserGetRequest)
}

::google::protobuf::uint8* UserGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserGetRequest)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserGetRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UserGetRequest)
  return target;
}

size_t UserGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserGetRequest)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserGetRequest)
    MergeFrom(*source);
  }
}

void UserGetRequest::MergeFrom(const UserGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void UserGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserGetRequest::CopyFrom(const UserGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserGetRequest::IsInitialized() const {
  return true;
}

void UserGetRequest::Swap(UserGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserGetRequest::InternalSwap(UserGetRequest* other) {
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserGetRequest::GetMetadata() const {
  protobuf_UsersGet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UsersGet_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserGetRequest

// string id = 1;
void UserGetRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserGetRequest::id() const {
  // @@protoc_insertion_point(field_get:UserGetRequest.id)
  return id_.GetNoArena();
}
void UserGetRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserGetRequest.id)
}
#if LANG_CXX11
void UserGetRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserGetRequest.id)
}
#endif
void UserGetRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserGetRequest.id)
}
void UserGetRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserGetRequest.id)
}
::std::string* UserGetRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:UserGetRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserGetRequest::release_id() {
  // @@protoc_insertion_point(field_release:UserGetRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserGetRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:UserGetRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserGetResponse::kUserFieldNumber;
const int UserGetResponse::kValidFieldNumber;
const int UserGetResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserGetResponse::UserGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_UsersGet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserGetResponse)
}
UserGetResponse::UserGetResponse(const UserGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_user()) {
    user_ = new ::User(*from.user_);
  } else {
    user_ = NULL;
  }
  valid_ = from.valid_;
  // @@protoc_insertion_point(copy_constructor:UserGetResponse)
}

void UserGetResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_, 0, reinterpret_cast<char*>(&valid_) -
    reinterpret_cast<char*>(&user_) + sizeof(valid_));
  _cached_size_ = 0;
}

UserGetResponse::~UserGetResponse() {
  // @@protoc_insertion_point(destructor:UserGetResponse)
  SharedDtor();
}

void UserGetResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete user_;
  }
}

void UserGetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserGetResponse::descriptor() {
  protobuf_UsersGet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UsersGet_2eproto::file_level_metadata[1].descriptor;
}

const UserGetResponse& UserGetResponse::default_instance() {
  protobuf_UsersGet_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserGetResponse* UserGetResponse::New(::google::protobuf::Arena* arena) const {
  UserGetResponse* n = new UserGetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:UserGetResponse)
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  valid_ = false;
}

bool UserGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserGetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .User user = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool valid = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserGetResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserGetResponse)
  return false;
#undef DO_
}

void UserGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserGetResponse)
  // .User user = 1;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user_, output);
  }

  // bool valid = 2;
  if (this->valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->valid(), output);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserGetResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:UserGetResponse)
}

::google::protobuf::uint8* UserGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserGetResponse)
  // .User user = 1;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->user_, false, target);
  }

  // bool valid = 2;
  if (this->valid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->valid(), target);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserGetResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UserGetResponse)
  return target;
}

size_t UserGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserGetResponse)
  size_t total_size = 0;

  // string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .User user = 1;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_);
  }

  // bool valid = 2;
  if (this->valid() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserGetResponse)
    MergeFrom(*source);
  }
}

void UserGetResponse::MergeFrom(const UserGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_user()) {
    mutable_user()->::User::MergeFrom(from.user());
  }
  if (from.valid() != 0) {
    set_valid(from.valid());
  }
}

void UserGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserGetResponse::CopyFrom(const UserGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserGetResponse::IsInitialized() const {
  return true;
}

void UserGetResponse::Swap(UserGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserGetResponse::InternalSwap(UserGetResponse* other) {
  error_.Swap(&other->error_);
  std::swap(user_, other->user_);
  std::swap(valid_, other->valid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserGetResponse::GetMetadata() const {
  protobuf_UsersGet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UsersGet_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserGetResponse

// .User user = 1;
bool UserGetResponse::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
void UserGetResponse::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
const ::User& UserGetResponse::user() const {
  // @@protoc_insertion_point(field_get:UserGetResponse.user)
  return user_ != NULL ? *user_
                         : *::User::internal_default_instance();
}
::User* UserGetResponse::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::User;
  }
  // @@protoc_insertion_point(field_mutable:UserGetResponse.user)
  return user_;
}
::User* UserGetResponse::release_user() {
  // @@protoc_insertion_point(field_release:UserGetResponse.user)
  
  ::User* temp = user_;
  user_ = NULL;
  return temp;
}
void UserGetResponse::set_allocated_user(::User* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:UserGetResponse.user)
}

// bool valid = 2;
void UserGetResponse::clear_valid() {
  valid_ = false;
}
bool UserGetResponse::valid() const {
  // @@protoc_insertion_point(field_get:UserGetResponse.valid)
  return valid_;
}
void UserGetResponse::set_valid(bool value) {
  
  valid_ = value;
  // @@protoc_insertion_point(field_set:UserGetResponse.valid)
}

// string error = 3;
void UserGetResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserGetResponse::error() const {
  // @@protoc_insertion_point(field_get:UserGetResponse.error)
  return error_.GetNoArena();
}
void UserGetResponse::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserGetResponse.error)
}
#if LANG_CXX11
void UserGetResponse::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserGetResponse.error)
}
#endif
void UserGetResponse::set_error(const char* value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserGetResponse.error)
}
void UserGetResponse::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserGetResponse.error)
}
::std::string* UserGetResponse::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:UserGetResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserGetResponse::release_error() {
  // @@protoc_insertion_point(field_release:UserGetResponse.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserGetResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:UserGetResponse.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
